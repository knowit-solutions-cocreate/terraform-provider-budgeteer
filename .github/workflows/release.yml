# This GitHub action can publish assets for release when a tag is created.
name: release
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Update Go modules
        run: |
          go mod tidy
          go mod verify
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Get latest version and increment
        id: semver
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "Current latest tag: $latest_tag"
          major=$(echo $latest_tag | cut -d. -f1)
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          new_patch=$((patch + 1))
          new_tag="${major}.${minor}.${new_patch}"
          echo "new_tag=${new_tag}" >> $GITHUB_OUTPUT
          
      - name: Create and push tag
        run: |
          new_tag=${{ steps.semver.outputs.new_tag }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a $new_tag -m "Release $new_tag"
          git push origin $new_tag
          
      - name: Prepare manifest
        run: |
          cp terraform-registry-manifest.json "terraform-provider-budgeteer_${{ steps.semver.outputs.new_tag }}_manifest.json"
      
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
